--not for nigger faggots

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v69=0;while true do if (v69==0) then v19=v0(v3(v30,1,1));return "";end end else local v70=0;local v71;while true do if (v70==0) then v71=v2(v0(v30,16));if v19 then local v100=0;local v101;while true do if (v100==1) then return v101;end if (v100==0) then v101=v5(v71,v19);v19=nil;v100=1;end end else return v71;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v72=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-((1638 -(1523 + 114)) -0)) -(v32-(1 + 0))) + (2 -1))) ;return v72-(v72%(620 -(555 + (91 -27)))) ;else local v73=(1996 -(68 + 997)) -(857 + 74) ;local v74;while true do if (v73==((1838 -(226 + 1044)) -(367 + 201))) then v74=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v74 + v74))>=v74) and (1 + 0)) or (877 -(282 + 595)) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=0 -(0 -0) ;local v36;local v37;while true do if (v35==(118 -(32 + 85))) then return (v37 * (251 + 5)) + v36 ;end if (v35==(0 -0)) then v36,v37=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;v35=1;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + (4 -1) );v18=v18 + (354 -(64 + 23 + 263)) ;return (v41 * (16777396 -(67 + 113))) + (v40 * ((190997 -142941) + (18432 -(802 + 150)))) + (v39 * (628 -372)) + v38 ;end local function v24()local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 -0)) then v45=1 + 0 ;v46=(v20(v44,998 -(915 + 82) ,17 + 3 ) * ((5 -3)^(19 + 13))) + v43 ;v42=2 -0 ;end if (v42==(1190 -(1069 + (2031 -(1789 + 124))))) then if (v47==(0 -0)) then if (v46==(0 -0)) then return v48 * (0 -0) ;else v47=(767 -(745 + 21)) + 0 ;v45=(0 + 0) -0 ;end elseif (v47==2047) then return ((v46==(0 + 0)) and (v48 * (((2178 -1386) -(368 + 423))/(885 -(261 + 624))))) or (v48 * NaN) ;end return v8(v48,v47-(1817 -794) ) * (v45 + (v46/(2^((639 -476) -111)))) ;end if (v42==((1 + 19) -(8 + 2 + 8))) then v47=v20(v44,80 -59 ,31);v48=((v20(v44,32)==(443 -(416 + 26))) and  -(3 -2)) or 1 ;v42=2 + 1 ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=439 -(145 + 293) ;end end end local function v25(v49)local v50=1055 -(87 + 968) ;local v51;local v52;while true do if (v50==(4 -(8 -5))) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=2 + 0 ;end if (v50==(6 -3)) then return v6(v52);end if (v50==((405 + 1010) -((984 -537) + 966))) then v52={};for v78=1, #v51 do v52[v78]=v2(v1(v3(v51,v78,v78)));end v50=(22 -(9 + 5)) -5 ;end if (v50==0) then v51=nil;if  not v49 then local v94=1817 -(1703 + 114) ;while true do if (0==v94) then v49=v23();if (v49==(701 -(376 + 325))) then return "";end break;end end end v50=1 -(376 -(85 + 291)) ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v53==(1086 -(461 + 625))) then v54=1288 -(993 + 295) ;v55=nil;v53=1 + 0 ;end if (v53==(1175 -(418 + 753))) then while true do if (v54==(2 + 1)) then v61=nil;while true do local v102=0;while true do if (v102==(0 + 0)) then if (v55==2) then local v108=0 + 0 ;local v109;while true do if (0~=v108) then else v109=0 + 0 ;while true do if (v109==0) then for v258=1,v60 do local v259=0;local v260;local v261;while true do if ((529 -(406 + 123))==v259) then local v315=0;while true do if (v315==0) then v260=v21();v261=nil;v315=1770 -(1749 + 20) ;end if (v315==1) then v259=1 + 0 ;break;end end end if (1==v259) then if (v260==(1323 -(1249 + 73))) then v261=v21()~=0 ;elseif (v260==2) then v261=v24();elseif (v260==3) then v261=v25();end v61[v258]=v261;break;end end end v59[3]=v21();v109=1 + 0 ;end if (v109==1) then for v262=1,v23() do local v263=0;local v264;local v265;local v266;while true do if ((1146 -(466 + 679))==v263) then v266=nil;while true do if (v264==(2 -1)) then while true do if (v265==(0 -0)) then v266=v21();if (v20(v266,1901 -(106 + 1794) ,1)~=(0 + 0)) then else local v332=0;local v333;local v334;local v335;local v336;local v337;while true do if (v332==1) then v335=nil;v336=nil;v332=2;end if (v332==0) then v333=0 + 0 ;v334=nil;v332=2 -1 ;end if (v332==(5 -3)) then v337=nil;while true do if (0~=v333) then else local v340=0;while true do if (v340~=1) then else v333=115 -(4 + 110) ;break;end if (v340~=0) then else v334=584 -(57 + 527) ;v335=nil;v340=1428 -(41 + 1386) ;end end end if (v333~=(104 -(17 + 86))) then else v336=nil;v337=nil;v333=2;end if (v333~=2) then else while true do if (v334~=0) then else local v341=0 + 0 ;local v342;local v343;while true do if (v341~=(1 -0)) then else while true do if (v342~=(0 -0)) then else v343=0;while true do if (v343==0) then local v354=166 -(122 + 44) ;while true do if (v354==(0 -0)) then v335=v20(v266,6 -4 ,3 + 0 );v336=v20(v266,1 + 3 ,11 -5 );v354=66 -(30 + 35) ;end if (v354~=(1 + 0)) then else v343=1;break;end end end if (v343==(1258 -(1043 + 214))) then v334=3 -2 ;break;end end break;end end break;end if (v341==(1212 -(323 + 889))) then v342=0 -0 ;v343=nil;v341=1;end end end if (v334~=3) then else if (v20(v336,3,3)~=1) then else v337[4]=v61[v337[584 -(361 + 219) ]];end v56[v262]=v337;break;end if (v334==2) then local v345=0;local v346;while true do if (v345==(320 -(53 + 267))) then v346=0;while true do if (v346==0) then local v352=0;local v353;while true do if (v352==0) then v353=0 + 0 ;while true do if (v353==0) then if (v20(v336,1,414 -(15 + 398) )~=1) then else v337[2]=v61[v337[984 -(18 + 964) ]];end if (v20(v336,7 -5 ,2 + 0 )==(1 + 0)) then v337[3]=v61[v337[853 -(20 + 830) ]];end v353=1 + 0 ;end if (v353==(127 -(116 + 10))) then v346=1;break;end end break;end end end if ((1 + 0)==v346) then v334=3;break;end end break;end end end if (v334==1) then local v347=0;local v348;local v349;while true do if (v347~=1) then else while true do if (v348==(738 -(542 + 196))) then v349=0;while true do if (v349==(1 -0)) then v334=2;break;end if ((0 + 0)==v349) then v337={v22(),v22(),nil,nil};if (v335==0) then local v355=0 -0 ;local v356;local v357;while true do if (v355~=1) then else while true do if (v356~=0) then else v357=0;while true do if (v357~=(1551 -(1126 + 425))) then else v337[408 -(118 + 287) ]=v22();v337[4]=v22();break;end end break;end end break;end if (v355~=(0 -0)) then else v356=1121 -(118 + 1003) ;v357=nil;v355=2 -1 ;end end elseif (v335==(378 -(142 + 235))) then v337[3]=v23();elseif (v335==2) then v337[3]=v23() -((9 -7)^16) ;elseif (v335~=3) then else local v364=0 + 0 ;local v365;local v366;while true do if (v364==(978 -(553 + 424))) then while true do if ((0 -0)~=v365) then else v366=0 + 0 ;while true do if (v366==0) then v337[3]=v23() -(2^16) ;v337[4]=v22();break;end end break;end end break;end if (v364==(0 + 0)) then v365=0;v366=nil;v364=1;end end end v349=1;end end break;end end break;end if (v347==(0 + 0)) then v348=0 + 0 ;v349=nil;v347=1;end end end end break;end end break;end end end break;end end break;end if (v264~=(0 + 0)) then else local v326=0;while true do if (v326==(0 -0)) then v265=0;v266=nil;v326=2 -1 ;end if (v326~=1) then else v264=1;break;end end end end break;end if (v263~=(0 -0)) then else v264=0;v265=nil;v263=1;end end end v55=1 + 2 ;break;end end break;end end end if (v55==(4 -3)) then local v110=753 -(239 + 514) ;local v111;while true do if (v110~=0) then else v111=0 + 0 ;while true do if (v111==(1329 -(797 + 532))) then local v229=0;local v230;while true do if (v229==(0 + 0)) then v230=0;while true do if (v230~=1) then else v111=1 + 0 ;break;end if (v230~=0) then else v59={v56,v57,nil,v58};v60=v23();v230=1;end end break;end end end if (v111==1) then v61={};v55=733 -(476 + 255) ;break;end end break;end end end v102=1;end if ((1131 -(369 + 761))~=v102) then else if (v55==(0 + 0)) then local v112=0;while true do if (v112~=(0 -0)) then else local v116=0 -0 ;while true do if (v116~=0) then else v56={};v57={};v116=1;end if (v116~=1) then else v112=239 -(64 + 174) ;break;end end end if (v112==(1 + 0)) then v58={};v55=1 -0 ;break;end end end if (v55~=(339 -(144 + 192))) then else local v113=216 -(42 + 174) ;local v114;local v115;while true do if (0~=v113) then else v114=0;v115=nil;v113=1 + 0 ;end if ((1 + 0)==v113) then while true do if (v114==(0 + 0)) then v115=0;while true do if (v115==0) then local v309=0;local v310;while true do if (v309==(1504 -(363 + 1141))) then v310=1580 -(1183 + 397) ;while true do if (v310==(0 -0)) then local v328=0 + 0 ;while true do if (v328==0) then for v338=1,v23() do v57[v338-1 ]=v28();end return v59;end end end end break;end end end end break;end end break;end end end break;end end end break;end if (v54==(2 + 0)) then local v98=1975 -(1913 + 62) ;while true do if ((0 + 0)~=v98) then else local v107=0 -0 ;while true do if (v107==1) then v98=1;break;end if (v107==0) then v59=nil;v60=nil;v107=1934 -(565 + 1368) ;end end end if (1==v98) then v54=3;break;end end end if (v54~=(3 -2)) then else v57=nil;v58=nil;v54=1663 -(1477 + 184) ;end if (v54==(0 -0)) then local v99=0;while true do if (v99==0) then v55=0 + 0 ;v56=nil;v99=1;end if (v99==1) then v54=1;break;end end end end break;end if (v53==(858 -(564 + 292))) then v58=nil;v59=nil;v53=3;end if (v53==(4 -1)) then v60=nil;v61=nil;v53=4;end if (v53==(2 -1)) then v56=nil;v57=nil;v53=306 -(244 + 60) ;end end end local function v29(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end if (v65==1) then v68=v62[3];return function(...)local v80=v66;local v81=v67;local v82=v68;local v83=v27;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v95=0,v88 do if (v95>=v82) then v86[v95-v82 ]=v87[v95 + 1 ];else v90[v95]=v87[v95 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=24) then if (v93<=11) then if (v93<=5) then if (v93<=2) then if (v93<=0) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==1) then local v160=v92[2];local v161=v90[v160];local v162=v92[3];for v231=1,v162 do v161[v231]=v90[v160 + v231 ];end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=3) then local v117=v92[2];local v118=v92[4];local v119=v117 + 2 ;local v120={v90[v117](v90[v117 + 1 ],v90[v119])};for v147=1,v118 do v90[v119 + v147 ]=v120[v147];end local v121=v120[1];if v121 then v90[v119]=v121;v84=v92[3];else v84=v84 + 1 ;end elseif (v93==4) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v167=v92[2];v90[v167](v13(v90,v167 + 1 ,v92[3]));end elseif (v93<=8) then if (v93<=6) then v90[v92[2]]=v90[v92[3]];elseif (v93==7) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=9) then local v124=0;local v125;local v126;local v127;while true do if (v124==0) then v125=v81[v92[3]];v126=nil;v124=1;end if (v124==1) then v127={};v126=v10({},{__index=function(v269,v270)local v271=v127[v270];return v271[1][v271[2]];end,__newindex=function(v272,v273,v274)local v275=v127[v273];v275[1][v275[2]]=v274;end});v124=2;end if (v124==2) then for v277=1,v92[4] do v84=v84 + 1 ;local v278=v80[v84];if (v278[1]==6) then v127[v277-1 ]={v90,v278[3]};else v127[v277-1 ]={v63,v278[3]};end v89[ #v89 + 1 ]=v127;end v90[v92[2]]=v29(v125,v126,v64);break;end end elseif (v93==10) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=17) then if (v93<=14) then if (v93<=12) then local v128=v92[2];v90[v128](v13(v90,v128 + 1 ,v92[3]));elseif (v93>13) then local v172=0;local v173;while true do if (0==v172) then v173=v92[2];v90[v173](v90[v173 + 1 ]);break;end end else local v174=v92[2];v90[v174]=v90[v174](v13(v90,v174 + 1 ,v92[3]));end elseif (v93<=15) then local v129=v92[2];local v130={v90[v129](v90[v129 + 1 ])};local v131=0;for v150=v129,v92[4] do local v151=0;while true do if (0==v151) then v131=v131 + 1 ;v90[v150]=v130[v131];break;end end end elseif (v93>16) then local v176=v92[2];local v177=v90[v176];local v178=v92[3];for v236=1,v178 do v177[v236]=v90[v176 + v236 ];end else for v239=v92[2],v92[3] do v90[v239]=nil;end end elseif (v93<=20) then if (v93<=18) then local v132=v92[2];local v133=v90[v132];for v152=v132 + 1 ,v92[3] do v7(v133,v90[v152]);end elseif (v93>19) then v90[v92[2]]=v90[v92[3]][v92[4]];else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93<=22) then if (v93>21) then local v183=0;local v184;while true do if (v183==0) then v184=v92[2];v90[v184](v90[v184 + 1 ]);break;end end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93>23) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v63[v92[3]];end elseif (v93<=37) then if (v93<=30) then if (v93<=27) then if (v93<=25) then local v134=v92[2];local v135=v92[4];local v136=v134 + 2 ;local v137={v90[v134](v90[v134 + 1 ],v90[v136])};for v153=1,v135 do v90[v136 + v153 ]=v137[v153];end local v138=v137[1];if v138 then v90[v136]=v138;v84=v92[3];else v84=v84 + 1 ;end elseif (v93>26) then local v191=v92[2];local v192={v90[v191](v90[v191 + 1 ])};local v193=0;for v241=v191,v92[4] do local v242=0;while true do if (v242==0) then v193=v193 + 1 ;v90[v241]=v192[v193];break;end end end else local v194=v92[2];local v195=v90[v92[3]];v90[v194 + 1 ]=v195;v90[v194]=v195[v92[4]];end elseif (v93<=28) then v90[v92[2]]=v90[v92[3]];elseif (v93==29) then v90[v92[2]]={};else v90[v92[2]]=v92[3];end elseif (v93<=33) then if (v93<=31) then local v141=v92[2];v90[v141]=v90[v141](v90[v141 + 1 ]);elseif (v93==32) then local v202=v92[2];local v203={};for v243=1, #v89 do local v244=v89[v243];for v284=0, #v244 do local v285=0;local v286;local v287;local v288;while true do if (v285==1) then v288=v286[2];if ((v287==v90) and (v288>=v202)) then v203[v288]=v287[v288];v286[1]=v203;end break;end if (v285==0) then v286=v244[v284];v287=v286[1];v285=1;end end end end else v90[v92[2]]=v92[3];end elseif (v93<=35) then if (v93>34) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];else v90[v92[2]]=v64[v92[3]];end elseif (v93>36) then do return;end else for v245=v92[2],v92[3] do v90[v245]=nil;end end elseif (v93<=43) then if (v93<=40) then if (v93<=38) then local v143=v92[2];local v144={};for v156=1, #v89 do local v157=0;local v158;while true do if (v157==0) then v158=v89[v156];for v293=0, #v158 do local v294=0;local v295;local v296;local v297;while true do if (v294==0) then v295=v158[v293];v296=v295[1];v294=1;end if (v294==1) then v297=v295[2];if ((v296==v90) and (v297>=v143)) then local v327=0;while true do if (v327==0) then v144[v297]=v296[v297];v295[1]=v144;break;end end end break;end end end break;end end end elseif (v93>39) then local v210=0;local v211;local v212;while true do if (v210==1) then v90[v211 + 1 ]=v212;v90[v211]=v212[v92[4]];break;end if (v210==0) then v211=v92[2];v212=v90[v92[3]];v210=1;end end else local v213=0;local v214;while true do if (v213==0) then v214=v92[2];v90[v214]=v90[v214](v90[v214 + 1 ]);break;end end end elseif (v93<=41) then v90[v92[2]]={};elseif (v93==42) then local v215=0;local v216;while true do if (v215==0) then v216=v92[2];v90[v216]=v90[v216](v13(v90,v216 + 1 ,v92[3]));break;end end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=46) then if (v93<=44) then v84=v92[3];elseif (v93>45) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v63[v92[3]];end elseif (v93<=48) then if (v93==47) then local v221=v81[v92[3]];local v222;local v223={};v222=v10({},{__index=function(v247,v248)local v249=v223[v248];return v249[1][v249[2]];end,__newindex=function(v250,v251,v252)local v253=v223[v251];v253[1][v253[2]]=v252;end});for v255=1,v92[4] do v84=v84 + 1 ;local v256=v80[v84];if (v256[1]==6) then v223[v255-1 ]={v90,v256[3]};else v223[v255-1 ]={v63,v256[3]};end v89[ #v89 + 1 ]=v223;end v90[v92[2]]=v29(v221,v222,v64);else v90[v92[2]]=v64[v92[3]];end elseif (v93>49) then v84=v92[3];else do return;end end v84=v84 + 1 ;end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);